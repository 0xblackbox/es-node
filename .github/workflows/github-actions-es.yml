# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: GitHub Actions ES
run-name: ${{ github.actor }} is push code to main ðŸš€
on:
  push:
    branches:
      - main
      - merge
  pull_request:
    branches:
      - main
      - merge
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build
        run: go build -v ./cmd/...

      - name: Test
        run: go test -v ./... -tags ci

      - name: Check build and test results
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            if (job.status === 'failure') {
              await github.pulls.updateBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                expected_head_sha: pr.head.sha,
                status: 'behind'
              });
            }
